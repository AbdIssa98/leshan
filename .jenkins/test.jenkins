/************************************************************************************

  Manual job used to test to build a branch on jenkins
  Take 1 parameters (BRANCH).

    Checks out current ${BRANCH}'s HEAD
  
*************************************************************************************/
pipeline {
  agent any
  parameters {
    string(
        name: 'BRANCH',
        defaultValue: 'master',
        description: 'The branch to build. Examples: master, 1.x')
    booleanParam(
        name: 'TEST_WITH_TOOLCHAIN',
        defaultValue: false,
        description: 'To execute tests using toolchain')
    string(
        name: 'JDK_TOOLCHAIN_VERSION',
        defaultValue: '',
        description: 'The jdk version used to execute tests when `TEST_WITH_TOOLCHAIN` is used. (e.g. 1.7 1.8 11 17 21 ...). By default, this is an empty string which means use minimal supported java version')
  }
  tools {
    maven 'apache-maven-latest'
    jdk 'temurin-jdk11-latest'
  }
  options {
    timeout (time: 180, unit: 'MINUTES')
    buildDiscarder(logRotator(numToKeepStr: '3'))
    disableConcurrentBuilds()
    skipDefaultCheckout()
    durabilityHint('PERFORMANCE_OPTIMIZED')
  }
  stages {
    stage('Build') {
      steps {
        // Checkout code
        git url: 'git@github.com:eclipse-leshan/leshan.git',
            credentialsId: 'github-bot-ssh',
            branch: '${BRANCH}'
      
        // Build 
        sh ''' mvn -B com.github.ekryd.sortpom:sortpom-maven-plugin:verify -PallPom ''' 
        // This ssh agent is needed to cache yarn/node to download.eclipse.org when using -PeclipseJenkins
        // see : https://github.com/eclipse-leshan/leshan/pull/1484
        sshagent ( ['projects-storage.eclipse.org-bot-ssh']) {
          sh ''' mvn -B clean install javadoc:javadoc -PeclipseJenkins -DskipTests'''
        }

        
        // check for vulnerability
        sh '''ls ./leshan-server-demo/webapp/node/yarn/dist/bin/ -alh'''
        sh '''export PATH=./leshan-server-demo/webapp/node:$PATH && ./leshan-server-demo/webapp/node/yarn/dist/bin/yarn --help'''
        sh '''export PATH=./leshan-server-demo/webapp/node:$PATH && mvn -B -Paggregate  dependency-check:aggregate'''  
      }
    }
  }
  post {
    always {
      // publish HTML report
      publishHTML target: [
            allowMissing: false,
            alwaysLinkToLastBuild: false,
            keepAll: true,
            reportDir: 'leshan/target/',
            reportFiles: 'dependency-check-report.htm',
            reportName: 'Vulnerability Report'
          ]
    }
  }
}
